name: News Automation

on:
  schedule:
    # Run every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch:
    # Allow manual triggering

# Prevent concurrent runs to avoid conflicts with data/processed_articles.json
concurrency:
  group: news-automation
  cancel-in-progress: true

jobs:
  fetch-summarize-post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Upgraded to v4 for consistency
        with:
          fetch-depth: 1
          ref: main  # Replace with your default branch if different (e.g., master)
          pull: 'false'  # Disable automatic pull to avoid rebase conflicts

      - name: Set up Python
        uses: actions/setup-python@v5  # Upgraded to v5 for latest compatibility
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download NLTK data
        run: |
          python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"

      - name: Run news automation pipeline
        env:
          X_CONSUMER_KEY: ${{ secrets.X_CONSUMER_KEY }}
          X_CONSUMER_SECRET: ${{ secrets.X_CONSUMER_SECRET }}
          X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        run: python src/main.py --max-posts 3

      - name: Commit and push state file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'actions@github.com'
          # Stash any existing changes to avoid conflicts
          git stash || true
          # Pull without rebase to sync with remote
          git pull origin main --no-rebase || true
          # Pop stash to restore changes
          git stash pop || true
          # Add and commit the state file
          git add data/processed_articles.json
          git commit -m "Update processed articles state [skip ci]" || echo "No changes to commit"
          # Push with authentication
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        continue-on-error: true  # Allow workflow to continue if commit/push fails

      - name: Upload state file
        uses: actions/upload-artifact@v4  # Upgraded to v4 to fix "Missing download info"
        with:
          name: state-file
          path: data/processed_articles.json
          if-no-files-found: warn  # Warn instead of fail if file is missing
        continue-on-error: true  # Allow workflow to continue if upload fails